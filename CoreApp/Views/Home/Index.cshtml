@model HomeViewModel
@using  CoreApp.Utilities.Constants;
@{
    ViewData["Title"] = Model.Title;
    ViewData["MetaKeyword"] = Model.MetaKeyword;
    ViewData["MetaDescription"] = Model.MetaDescription;
}
@section Scripts{
    <script src="~/client-app/controllers/home/index.js"></script>
}
<!-- Slideshow  -->
<div class="main-slider" id="home">
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12 jtv-slideshow">
                <div id="jtv-slideshow">
                    <div id='rev_slider_4_wrapper' class='rev_slider_wrapper fullwidthbanner-container'>
                        <div id='rev_slider_4' class='rev_slider fullwidthabanner'>
                            <ul>
                                @foreach (var slide in Model.HomeSlides)
                                {
                                    <li data-transition='fade' data-slotamount='7' data-masterspeed='1000' data-thumb=''>
                                        <img src='@slide.Image' data-bgposition='left top' data-bgfit='cover' data-bgrepeat='no-repeat' alt="@slide.Name" />
                                    </li>
                                }
                            </ul>
                            <div class="tp-bannertimer"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Search Section> -->
@(await Component.InvokeAsync("Search", new
    {
        keyword = CommonConstants.PagerDefault.Keyword,
        pageSize = CommonConstants.PagerDefault.PageSize,
        sortBy = CommonConstants.PagerDefault.SortBy,
        sortOrder = CommonConstants.PagerDefault.SortOrder,
        page = CommonConstants.PagerDefault.PageIndex
    }))
<!--End Search Section> -->
<!-- Blog -->
@(await Component.InvokeAsync("Blog", new
    {
        keyword = CommonConstants.PagerDefault.Keyword,
        pageSize = CommonConstants.PagerDefault.PageSize,
        sortBy = CommonConstants.PagerDefault.SortBy,
        sortOrder = CommonConstants.PagerDefault.SortOrder,
        page = CommonConstants.PagerDefault.PageIndex
    }))
<!-- End Blog -->
<!-- Brand -->
@await Component.InvokeAsync("Brand")
<!-- End Brand -->
